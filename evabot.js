const tgBot = require('node-telegram-bot-api');
const path = require('path');
const token = '7529465114:AAGbzCPm-RwaRpqMUOT02w6PriH9xsIM2Z0';
const bot = new tgBot(token, { polling: true });
const fs = require('fs');
const mongoose = require('mongoose');
const moment = require('moment');
// const { Recoverable } = require('repl');
// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
mongoose.connect('mongodb+srv://ilyakoval2202:Vip552789@cluster0.4w3zh.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0', { useNewUrlParser: true, useUnifiedTopology: true });

const appointmentSchema = new mongoose.Schema({
    user_id: Number,
    username: String,
    appointment_date: String,
    appointment_time: String,
    phone: String,
    type: String,
    status: { type: String, default: "confirmed" },
    reminder_sent_1h: { type: Boolean, default: false },
    reminder_sent_24h: { type: Boolean, default: false }  
});
const Appointment = mongoose.model('Appointment', appointmentSchema);


const keyboards = {
  mainOptions:[
    ['‚ùáÔ∏è –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥—É'],
    ['üìã –£–°–õ–£–ì–ò'],
    ['üî• –ê–ö–¶–ò–ò –∏ –°–ü–ï–¶–ü–†–ï–î–õ–û–ñ–ï–ù–ò–Ø'],
    ['üë©‚Äç‚öïÔ∏è –û –ù–ê–°'],
    ['‚úçÔ∏è –û—Ç–∑—ã–≤—ã'],
    ['üöç –ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è']
  ],

  manic:[
    ['üü• –ú–∞–Ω–∏–∫—é—Ä —Å –æ–¥–Ω–æ—Ä–æ–¥–Ω—ã–º –ø–æ–∫—Ä—ã—Ç–∏–µ–º —Å –≥–µ–ª–∏–µ–≤—ã–º —É–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º','üüß –°–Ω—è—Ç–∏–µ –±–µ–∑ –ø–æ–∫—Ä—ã—Ç–∏—è'],
    ['üü® –ú–∞–Ω–∏–∫—é—Ä –æ–¥–Ω–æ—Ä–æ–¥–Ω—ã–º –ø–æ–∫—Ä—ã—Ç–∏–µ–º ','üü© –ù–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ'],
    ['üü¶ –ú–∞–Ω–∏–∫—é—Ä –±–µ–∑ –ø–æ–∫—Ä—ã—Ç–∏—è','üü™ –ú—É–∂—Å–∫–æ–π –º–∞–Ω–∏–∫—é—Ä'],
    ['‚ùå –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥']
  ],

  pedikure:[
    ['üî¥ –ü–µ–¥–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º','üü† –ü–µ–¥–∏–∫—é—Ä –±–µ–∑ –ø–æ–∫—Ä—ã—Ç–∏—è'],
    ['üü° –ü–µ–¥–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –ø–∞–ª—å—Ü–µ–≤ –±–µ–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç–æ–ø—ã','üü¢ –°–Ω—è—Ç–∏–µ –±–µ–∑ –ø–æ–∫—Ä—ã—Ç–∏—è'],
    ['‚ùå –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥']
  ],

}

const userStates = {};
  

bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  if (msg.contact) return 0;

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (userStates[chatId]?.state === 'waiting_for_name') {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        userStates[chatId].name = text; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è
      
        await bot.sendMessage(chatId, '–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (+123456789012)... \n\nüòÉ–ø—Ä–æ—â–µ –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µüëá',
          {
            reply_markup: {
                keyboard: [
                    [{
                        text: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç üì±",
                        request_contact: true
                    }]
                ],
                one_time_keyboard: true,
                resize_keyboard: true
            }
          }
        );
        return;
    }      

  switch (text) {
    case '/start':
      await bot.sendMessage(chatId, '–û—Ç–ª–∏—á–Ω–æ, –≤—ã –Ω–∞–∂–∞–ª–∏ "–°—Ç–∞—Ä—Ç"! –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏–º. üéâ');
      showMainMenu(chatId);
      break;

    // –£—Å–ª—É–≥–∏
    case 'üìã –£–°–õ–£–ì–ò':
      await bot.sendMessage(chatId, `–ú–∞–Ω–∏–∫—é—Ä:
–ú–∞–Ω–∏–∫—é—Ä –æ–¥–Ω–æ—Ä–æ–¥–Ω—ã–º –ø–æ–∫—Ä—ã—Ç–∏–µ–º - 100 —Ä—É–± 
–ú–∞–Ω–∏–∫—é—Ä —Å –æ–¥–Ω–æ—Ä–æ–¥–Ω—ã–º –ø–æ–∫—Ä—ã—Ç–∏–µ–º —Å –≥–µ–ª–∏–µ–≤–Ω—ã–º —É–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º 
–ù–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ
–ú–∞–Ω–∏–∫—é—Ä –±–µ–∑ –ø–æ–∫—Ä—ã—Ç–∏—è
–ú—É–∂—Å–∫–æ–π –º–∞–Ω–∏–∫—é—Ä 
–°–Ω—è—Ç–∏–µ –±–µ–∑ –ø–æ–∫—Ä—ã—Ç–∏—è
–ü–µ–¥–∏–∫—é—Ä: 
–ü–µ–¥–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º 
–ü–µ–¥–∏–∫—é—Ä –±–µ–∑ –ø–æ–∫—Ä—ã—Ç–∏—è 
–ü–µ–¥–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –ø–∞–ª—å—Ü–µ–≤ –±–µ–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç–æ–ø—ã
–°–Ω—è—Ç–∏–µ –±–µ–∑ –ø–æ–∫—Ä—ã—Ç–∏—è
*–í –ø–æ–¥–∞—Ä–æ–∫ –Ω–æ—Å–∫–∏`, {
        reply_markup: {
          keyboard: [
            ['‚ùáÔ∏è –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥—É'],
            ['‚ùå –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥']
          ],
          resize_keyboard: true
        }
      });
      break;


    case '‚ùáÔ∏è –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥—É': 
    
    await bot.sendMessage(chatId,`–°—É–ø–µ—Ä
–í—ã–±–µ—Ä–∏ —É—Å–ª—É–≥—É, –∫–æ—Ç–æ—Ä–∞—è —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç
–ò–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö: `,{
    parse_mode: 'Markdown',
    reply_markup: {
    keyboard: [
        ['üíÖ –ú–∞–Ω–∏–∫—é—Ä','üíÖ –ü–µ–¥–∏–∫—é—Ä'],
        ['‚ùå –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥']
        ],
    resize_keyboard: true
    }
});
    
    break;

    case 'üíÖ –ü–µ–¥–∏–∫—é—Ä':
      bot.sendMessage(chatId,'üíÖ –ü–µ–¥–∏–∫—é—Ä',{
        parse_mode:'Markdown',
        reply_markup:{
          keyboard:keyboards.pedikure,
          resize_keyboard: true
        }
      });
      break;
    
     case 'üíÖ –ú–∞–Ω–∏–∫—é—Ä':
      bot.sendMessage(chatId,'üíÖ –ú–∞–Ω–∏–∫—é—Ä',{
        parse_mode:'Markdown',
        reply_markup:{
          keyboard:keyboards.manic,
          resize_keyboard: true
        }
      });
      break;

    // –ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è
    case 'üöç –ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è':
      const yandexMapLink = `https://yandex.by/maps/org/tanyanailsss/161368982356/?ll=27.482495%2C53.878875&z=17`;

      await bot.sendMessage(chatId, `–ú—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –ø–æ –∞–¥—Ä–µ—Å—É: –Ø–Ω–∫–∏ –ë—Ä—ã–ª—è 24.\n\n–í–æ—Ç –Ω–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö:\n[–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ](${yandexMapLink})`, {
        parse_mode: 'Markdown',
        reply_markup: {
          keyboard: [
            ['üÖøÔ∏è –ì–¥–µ –ø—Ä–∏–ø–∞—Ä–∫–æ–≤–∞—Ç—å—Å—è?'],
            ['‚ùå –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥']
          ],
          resize_keyboard: true
        }
      });
      break;

    case 'üÖøÔ∏è –ì–¥–µ –ø—Ä–∏–ø–∞—Ä–∫–æ–≤–∞—Ç—å—Å—è?':
      await bot.sendMessage(chatId, '–ë–ª–∏–∂–∞–π—à–∏–µ –ø–∞—Ä–∫–æ–≤–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤–¥–æ–ª—å —É–ª–∏—Ü—ã –Ø–Ω–∫–∏ –ë—Ä—ã–ª—è –∏ –≤–æ–∑–ª–µ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞. –ü–∞—Ä–∫–æ–≤–∫–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è.');
      break;

    // –û –ù–ê–°
    case 'üë©‚Äç‚öïÔ∏è –û –ù–ê–°':
      await bot.sendMessage(chatId, `–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —É–∑–Ω–∞—Ç—å –æ –Ω–∞—Å`, {
        reply_markup: {
          keyboard: [
            ['üèö –ò–Ω—Ç–µ—Ä—å–µ—Ä'],
            ['‚òéÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã'],
            ['‚ùå –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥']
          ],
          resize_keyboard: true
        }
      });
      break;

    // –ö–æ–Ω—Ç–∞–∫—Ç—ã
    case '‚òéÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã':
      await bot.sendMessage(chatId, '–°–≤—è–∑–∞—Ç—å—Å—è –º–æ–∂–Ω–æ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É: +375 29 271-01-83.\nInstagram: [tanyanailsss_minsk](https://www.instagram.com/tanyanailsss_minsk)', {
        parse_mode: 'Markdown'
      });
      break;

    // –û—Ç–∑—ã–≤—ã
    case '‚úçÔ∏è –û—Ç–∑—ã–≤—ã':
      await bot.sendMessage(chatId, `–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤—ã`, {
        reply_markup: {
          keyboard: [
            ['‚úçÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤'],
            ['üëÄ –ü–æ—á–∏—Ç–∞—Ç—å –æ—Ç–∑—ã–≤—ã'],
            ['‚ùå –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥']
          ],
          resize_keyboard: true
        }
      });
      break;

    case '‚ùå –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥':
      bot.sendMessage(chatId,'–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É',{
        parse_mode: 'HTML',
        reply_markup: {
          keyboard: keyboards.mainOptions,
          resize_keyboard: true
        }
      });
    break;

    // –†–∞–∑–Ω—ã–µ –≤–∏–¥—ã –º–∞–Ω–∏–∫—é—Ä–∞
    case 'üü• –ú–∞–Ω–∏–∫—é—Ä —Å –æ–¥–Ω–æ—Ä–æ–¥–Ω—ã–º –ø–æ–∫—Ä—ã—Ç–∏–µ–º —Å –≥–µ–ª–∏–µ–≤—ã–º —É–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º':
      
      await recoding(msg);
      
      break;

    case 'üüß –°–Ω—è—Ç–∏–µ –±–µ–∑ –ø–æ–∫—Ä—ã—Ç–∏—è':
      await bot.sendMessage(chatId, '–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–Ω—è—Ç–∏–µ –±–µ–∑ –ø–æ–∫—Ä—ã—Ç–∏—è.');
      await recoding(msg);
      break;

    case 'üü® –ú–∞–Ω–∏–∫—é—Ä –æ–¥–Ω–æ—Ä–æ–¥–Ω—ã–º –ø–æ–∫—Ä—ã—Ç–∏–µ–º':
      await bot.sendMessage(chatId, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –º–∞–Ω–∏–∫—é—Ä —Å –æ–¥–Ω–æ—Ä–æ–¥–Ω—ã–º –ø–æ–∫—Ä—ã—Ç–∏–µ–º.');
      await recoding(msg);
      break;

    case 'üü© –ù–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ':
      await bot.sendMessage(chatId, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ.');
      await recoding(msg);
      break;

    case 'üü¶ –ú–∞–Ω–∏–∫—é—Ä –±–µ–∑ –ø–æ–∫—Ä—ã—Ç–∏—è':
      await bot.sendMessage(chatId, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –º–∞–Ω–∏–∫—é—Ä –±–µ–∑ –ø–æ–∫—Ä—ã—Ç–∏—è.');
      await recoding(msg);
      break;

    case 'üü™ –ú—É–∂—Å–∫–æ–π –º–∞–Ω–∏–∫—é—Ä':
      await bot.sendMessage(chatId, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –º—É–∂—Å–∫–æ–π –º–∞–Ω–∏–∫—é—Ä.');
      await recoding(msg);
      break;

    // –†–∞–∑–Ω—ã–µ –≤–∏–¥—ã –ø–µ–¥–∏–∫—é—Ä–∞
    case 'üî¥ –ü–µ–¥–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º':
      await bot.sendMessage(chatId, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–µ–¥–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º.');
      await recoding(msg);
      break;

    case 'üü† –ü–µ–¥–∏–∫—é—Ä –±–µ–∑ –ø–æ–∫—Ä—ã—Ç–∏—è':
      await bot.sendMessage(chatId, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–µ–¥–∏–∫—é—Ä –±–µ–∑ –ø–æ–∫—Ä—ã—Ç–∏—è.');
      await recoding(msg);
      break;

    case 'üü° –ü–µ–¥–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –ø–∞–ª—å—Ü–µ–≤ –±–µ–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç–æ–ø—ã':
      await bot.sendMessage(chatId, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–µ–¥–∏–∫—é—Ä —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –ø–∞–ª—å—Ü–µ–≤ –±–µ–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç–æ–ø—ã.');
      await recoding(msg);
      break;

    case 'üü¢ –°–Ω—è—Ç–∏–µ –±–µ–∑ –ø–æ–∫—Ä—ã—Ç–∏—è':
      await bot.sendMessage(chatId, '–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–Ω—è—Ç–∏–µ –±–µ–∑ –ø–æ–∫—Ä—ã—Ç–∏—è.');
      await recoding(msg);
      break;

    default:
      await bot.sendMessage(chatId, '–ò–∑–≤–∏–Ω–∏—Ç–µ, –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞!');
      break;
  }
});

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
async function showMainMenu(chatId) {
  await bot.sendMessage(chatId, `–ü—Ä–µ–∫—Ä–∞—Å–Ω–æüëå, –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –º–æ–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏ –∏–ª–∏ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—É üìÖ.
–ú–æ–∂–µ—Ç –±—ã—Ç—å, –≤–∞–º –Ω—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è? üë±‚Äç‚ôÄÔ∏è

–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –Ω–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –∫—ç—à–±—ç–∫ üí∞ –∏ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–∞ –Ω–∞—à–∏ —É—Å–ª—É–≥–∏.

–í—ã–±–∏—Ä–∞–π—Ç–µ, —á—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ üëá`,{
  parse_mode: 'HTML',
  reply_markup:{
    keyboard: keyboards.mainOptions,  
  },
  resize_keyboard: true
});
}

async function recoding(msg){
            const typeText = msg.text.slice(3, msg.text.length);
            const chatId = msg.chat.id;
            const dates = [];

            // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞—Ç –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ 7 –¥–Ω–µ–π

            for (let i = 0; i < 14; i++) {
                dates.push(moment().add(i, 'days').format('YYYY-MM-DD'));
            }

            // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –¥–∞—Ç–∞–º–∏
            const dateButtons = dates.map(date => [{ text: date, callback_data: date }]);
            const options = {
                reply_markup: {
                    inline_keyboard: dateButtons
                }
            };
            userStates['type'] = typeText;
            bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –¥–ª—è –∑–∞–ø–∏—Å–∏:', options);
}

bot.on('callback_query', async (query) => {
    const chatId = query.message.chat.id;
    const data = query.data;

    if (data.startsWith("20")) {
        {

            // –ü–æ–∏—Å–∫ –∑–∞–Ω—è—Ç—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É
            const bookedTimes = await Appointment.find({ appointment_date: data }).select('appointment_time');
            const bookedTimeSet = new Set(bookedTimes.map(item => item.appointment_time));

            // –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã
            const allTimes = ['10:00', '12:00', '14:00', '16:00', '18:00'];
            const availableTimes = allTimes.filter(time => !bookedTimeSet.has(time));

            // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º
            const timeButtons = availableTimes.map(time => [{ text: time, callback_data: `time_${data}_${time}` }]);
            const timeOptions = {
                reply_markup: {
                    inline_keyboard: timeButtons
                }
            };

            bot.sendMessage(chatId, `–í—ã –≤—ã–±—Ä–∞–ª–∏ ${data}. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è:`, timeOptions);
            return;
        }
    }
       // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–∞–ø—Ä–æ—Å –≤—ã–±–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ (—Ñ–æ—Ä–º–∞—Ç: "time_YYYY-MM-DD_HH:MM")
    if (data.startsWith("time_")) {
        const [, selectedDate, selectedTime] = data.split("_");

        // –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–Ω—è—Ç–æ –ª–∏ —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
        const existingAppointment = await Appointment.findOne({ appointment_date: selectedDate, appointment_time: selectedTime });
        if (existingAppointment) {
            bot.sendMessage(chatId, `–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—Ä–µ–º—è ${selectedTime} –Ω–∞ ${selectedDate} —É–∂–µ –∑–∞–Ω—è—Ç–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ.`);
            return;
        }
        
        userStates[chatId] = { state: 'waiting_for_name' };
        userStates['selectedDate'] = selectedDate;
        userStates['selectedTime'] = selectedTime;
        
        await bot.sendMessage(chatId, `–í–∞—à–∞ –∑–∞–ø–∏—Å—å –Ω–∞ ${selectedDate} –≤ ${selectedTime} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!`);
        await bot.sendMessage(chatId, `–ü–æ–¥—Å–∫–∞–∂–∏, –∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?`);
    }
});

bot.on('contact', async (msg) => {
    const chatId = msg.chat.id;
    const phoneNumber = msg.contact.phone_number;

    try {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        const newAppointment = new Appointment({
            user_id: chatId,
            username: userStates[chatId].name,
            appointment_date: userStates['selectedDate'],
            appointment_time: userStates['selectedTime'],
            phone: phoneNumber,
            type: userStates['type']
        });
        await newAppointment.save();
        await bot.sendMessage(chatId, `–°—É–ø–µ—Äüëç –Ø –∑–∞–ø–∏—Å–∞–ª–∞ —Ç–µ–±—è –Ω–∞ –±—Ä–æ–≤–∏ –Ω–∞ üìÖ${userStates['selectedDate']} ‚è∞${userStates['selectedTime']} –Ø —Ç–µ–±–µ –∑–∞—Ä–∞–Ω–µ–µ –Ω–∞–ø–æ–º–Ω—é üòâ –ë—É–¥—É –∂–¥–∞—Ç—å —Ç–µ–±—è, —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è üòÉ`,{
          reply_markup:{
            keyboard:keyboards.mainOptions,
          },
          resize_keyboard:true
        });
        delete userStates[chatId];
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞:', error);
        await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
    }
});